import { BaseVulnerabilityPattern, VulnerabilityMatch } from './base-pattern';

export class SqlInjectionPattern extends BaseVulnerabilityPattern {
  readonly id = 'SQL_INJECTION';
  readonly name = 'SQL Injection';
  readonly description =
    'Обнаружена потенциальная SQL инъекция - пользовательский ввод напрямую вставляется в SQL запрос';
  readonly severity = 'CRITICAL' as const;
  readonly cwe = 'CWE-89';
  readonly languages = ['typescript', 'javascript', 'python', 'java', 'go'];

  detect(code: string): VulnerabilityMatch[] {
    const matches: VulnerabilityMatch[] = [];
    const lines = code.split(/\r?\n/);

    // Паттерны для SQL инъекций
    const sqlPatterns = [
      // Прямая конкатенация в SQL
      {
        regex: /(SELECT|INSERT|UPDATE|DELETE|CREATE|DROP|ALTER)\s+.*\$\{.*\}/gi,
        message: 'Прямая интерполяция переменных в SQL запрос',
        recommendation:
          'Используйте параметризованные запросы или prepared statements',
      },
      {
        regex: /(SELECT|INSERT|UPDATE|DELETE|CREATE|DROP|ALTER)\s+.*\+.*['"]/gi,
        message: 'Конкатенация строк в SQL запрос',
        recommendation:
          'Используйте параметризованные запросы или prepared statements',
      },
      {
        regex:
          /(SELECT|INSERT|UPDATE|DELETE|CREATE|DROP|ALTER)\s+.*\$\{.*\}.*['"]/gi,
        message: 'Template literal в SQL запросе',
        recommendation:
          'Используйте параметризованные запросы или prepared statements',
      },
      // Опасные методы
      {
        regex: /\.query\s*\(\s*['"`].*\+.*['"`]/gi,
        message: 'Конкатенация в методе query()',
        recommendation: 'Используйте параметризованные запросы',
      },
      {
        regex: /\.execute\s*\(\s*['"`].*\+.*['"`]/gi,
        message: 'Конкатенация в методе execute()',
        recommendation: 'Используйте параметризованные запросы',
      },
      // Python специфичные паттерны
      {
        regex: /cursor\.execute\s*\(\s*['"`].*%s.*['"`]/gi,
        message: 'Использование %s форматирования в SQL',
        recommendation:
          'Используйте параметризованные запросы с кортежем параметров',
      },
      {
        regex: /cursor\.execute\s*\(\s*f['"`].*\{.*\}.*['"`]/gi,
        message: 'f-string в SQL запросе',
        recommendation: 'Используйте параметризованные запросы',
      },
    ];

    for (let i = 0; i < lines.length; i++) {
      const line = lines[i];

      for (const pattern of sqlPatterns) {
        const match = line.match(pattern.regex);
        if (match) {
          const codeSnippet = this.extractCodeSnippet(code, i + 1);
          matches.push(
            this.createMatch(
              i + 1,
              i + 1,
              codeSnippet,
              pattern.message,
              pattern.recommendation,
              0.9,
            ),
          );
        }
      }
    }

    return matches;
  }
}
