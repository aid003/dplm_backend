export { BaseVulnerabilityPattern, VulnerabilityPattern, VulnerabilityMatch } from './base-pattern';
export { SqlInjectionPattern } from './sql-injection';
export { XssPattern } from './xss';
export { PathTraversalPattern } from './path-traversal';
export { HardcodedSecretsPattern } from './hardcoded-secrets';
export { InsecureCryptoPattern } from './insecure-crypto';

import { VulnerabilityPattern } from './base-pattern';
import { SqlInjectionPattern } from './sql-injection';
import { XssPattern } from './xss';
import { PathTraversalPattern } from './path-traversal';
import { HardcodedSecretsPattern } from './hardcoded-secrets';
import { InsecureCryptoPattern } from './insecure-crypto';

export const ALL_VULNERABILITY_PATTERNS: VulnerabilityPattern[] = [
  new SqlInjectionPattern(),
  new XssPattern(),
  new PathTraversalPattern(),
  new HardcodedSecretsPattern(),
  new InsecureCryptoPattern(),
];

export function getPatternsByLanguage(language: string): VulnerabilityPattern[] {
  return ALL_VULNERABILITY_PATTERNS.filter(pattern => 
    pattern.languages.includes(language.toLowerCase())
  );
}

export function getPatternById(id: string): VulnerabilityPattern | undefined {
  return ALL_VULNERABILITY_PATTERNS.find(pattern => pattern.id === id);
}
